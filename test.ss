(define (prog expr_list var_list)
    
)
(define (myadd lexpr rexpr var_list)
    (+ (prog lexpr var_list) (prog rexpr var_list))
)
(define (myignore expr var_list)
    (+ 0 0)
)
(define (mymul lexpr rexpr var_list)
    (* (prog lexpr var_list) (prog rexpr var_list))
)
(define (myneg expr var_list)
    (* -1 (prog expr var_list))
)
(define (mylet iden lexpr rexpr var_list)
    (cons ())

)

;    (define (test)
;    (+ 1 2)
;    (second_test '(x 2))
;    )
;    (define (second_test lis)
;    (third_test (cons lis '(x 3)))
;    )
;    (define (third_test lis)
;    (car (car lis))
;    )
;    (test)